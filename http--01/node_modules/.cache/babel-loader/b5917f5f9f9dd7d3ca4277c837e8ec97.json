{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Stunlock\\\\Documents\\\\react16\\\\http--01\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Stunlock\\\\Documents\\\\react16\\\\http--01\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Stunlock\\\\Documents\\\\react16\\\\http--01\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Stunlock\\\\Documents\\\\react16\\\\http--01\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Stunlock\\\\Documents\\\\react16\\\\http--01\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Stunlock\\\\Documents\\\\react16\\\\http--01\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stunlock\\\\Documents\\\\react16\\\\http--01\\\\src\\\\containers\\\\Blog\\\\Blog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Post from '../../components/Post/Post';\nimport FullPost from '../../components/FullPost/FullPost';\nimport NewPost from '../../components/NewPost/NewPost';\nimport './Blog.css';\n\nvar Blog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Blog, _Component);\n\n  function Blog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Blog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Blog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(Blog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://jsonplaceholder.typicode.com/posts').then(function (response) {\n        var posts = response.data.slice(0, 4);\n        var updatedPosts = posts.map(function (post) {\n          return _objectSpread({}, post, {\n            author: 'Max'\n          });\n        });\n\n        _this2.setState({\n          posts: updatedPosts\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var posts = this.state.posts.map(function (post) {\n        return React.createElement(Post, {\n          key: post.id,\n          title: post.title,\n          author: post.author,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"Posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, posts), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(FullPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(NewPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Blog;\n}(Component);\n\nexport default Blog;","map":{"version":3,"sources":["C:\\Users\\Stunlock\\Documents\\react16\\http--01\\src\\containers\\Blog\\Blog.js"],"names":["React","Component","axios","Post","FullPost","NewPost","Blog","state","posts","get","then","response","data","slice","updatedPosts","map","post","author","setState","id","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,YAAP;;IAEMC,I;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAG;AADJ,K;;;;;;wCAIY;AAAA;;AAChBN,MAAAA,KAAK,CAACO,GAAN,CAAU,4CAAV,EACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AACd,YAAMH,KAAK,GAAGG,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAd;AACA,YAAMC,YAAY,GAAGN,KAAK,CAACO,GAAN,CAAU,UAAAC,IAAI,EAAI;AACnC,mCACOA,IADP;AAEIC,YAAAA,MAAM,EAAE;AAFZ;AAIH,SALoB,CAArB;;AAMA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACV,UAAAA,KAAK,EAAGM;AAAT,SAAd;AACH,OAVD;AAWH;;;6BAES;AAEN,UAAMN,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AACvC,eAAO,oBAAC,IAAD;AACK,UAAA,GAAG,EAAEA,IAAI,CAACG,EADf;AAEK,UAAA,KAAK,EAAEH,IAAI,CAACI,KAFjB;AAGK,UAAA,MAAM,EAAEJ,IAAI,CAACC,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,OANa,CAAd;AAUA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,KADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,CADJ;AAaH;;;;EA7CcP,S;;AAgDnB,eAAeK,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Post from '../../components/Post/Post';\nimport FullPost from '../../components/FullPost/FullPost';\nimport NewPost from '../../components/NewPost/NewPost';\nimport './Blog.css';\n\nclass Blog extends Component {\n\n    state = {\n        posts : []\n    }\n\n    componentDidMount() {\n        axios.get('https://jsonplaceholder.typicode.com/posts')\n        .then(response => {\n            const posts = response.data.slice(0,4);\n            const updatedPosts = posts.map(post => {\n                return {\n                    ...post,\n                    author: 'Max'\n                }\n            })\n            this.setState({posts : updatedPosts})\n        });\n    }\n\n    render () {\n\n        const posts = this.state.posts.map(post => {\n            return <Post\n                        key={post.id}\n                        title={post.title}\n                        author={post.author}\n                     />\n        }\n\n        )\n\n        return (\n            <div>\n                <section className=\"Posts\">\n                    {posts}\n                </section>\n                <section>\n                    <FullPost />\n                </section>\n                <section>\n                    <NewPost />\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Blog;"]},"metadata":{},"sourceType":"module"}